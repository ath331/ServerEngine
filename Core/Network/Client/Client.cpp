///////////////////////////////////////////////////////////////////////////
// @brief     Client Class
///////////////////////////////////////////////////////////////////////////


#include "pch.h"
#include "Client.h"


///////////////////////////////////////////////////////////////////////////
// @brief     Server를 세팅한다.
///////////////////////////////////////////////////////////////////////////
void AnT::Client::SetServerInfo( string ip, short port )
{
	m_serverData.CreateSocket();
	m_serverData.InitializeSocketInfo( ip, port );
	m_hasServer = true;
}

///////////////////////////////////////////////////////////////////////////
// @brief     Server에 연결한다.
///////////////////////////////////////////////////////////////////////////
bool AnT::Client::ConnectServer()
{
	if ( !m_hasServer )
		return false;

	if ( connect( m_serverData.sock, (SOCKADDR*)( &m_serverData.sockAdr ), sizeof( m_serverData.sockAdr ) ) == SOCKET_ERROR )
		return false;

	return true;
}

///////////////////////////////////////////////////////////////////////////
// @brief     비동기 수신 완료
///////////////////////////////////////////////////////////////////////////
void AnT::Client::_AsyncRecvCallback( SocketData* socketData, IOData* ioData, int bytesSize )
{
}

///////////////////////////////////////////////////////////////////////////
// @brief     비동기 송신 완료
///////////////////////////////////////////////////////////////////////////
void AnT::Client::_AsyncSendCallback( SocketData* socketData, IOData* ioData, int bytesSize )
{
}
