///////////////////////////////////////////////////////////////////////////
// @brief     PacketFactory
///////////////////////////////////////////////////////////////////////////


#include "pch.h"
#include "PacketFactory.h"
#include "../Packet/Packet/PacketBase.h"


///////////////////////////////////////////////////////////////////////////
// @brief     생성자
///////////////////////////////////////////////////////////////////////////
PacketFactory::PacketFactory()
	: m_packetBaseSize( sizeof( PacketBase ) )
{
}

///////////////////////////////////////////////////////////////////////////
// @brief     수신 데이터의 크기가 PacketBase가 되는지 체크한다.
///////////////////////////////////////////////////////////////////////////
bool PacketFactory::IsPacketBaseSize( int receiveSize )
{
	return m_packetBaseSize <= receiveSize;
}

///////////////////////////////////////////////////////////////////////////
// @brief     data에서 패킷사이즈 만큼을 추출한다.
///////////////////////////////////////////////////////////////////////////
char* PacketFactory::SubData( char* data, int receiveSize )
{
	memmove( data, data + 1, m_packetBaseSize );

	return nullptr;
}

///////////////////////////////////////////////////////////////////////////
// @brief     빈패킷을 생성하여 반환한다.
///////////////////////////////////////////////////////////////////////////
bool PacketFactory::MakePacket( PacketBase* packet )
{
	return true;
}
